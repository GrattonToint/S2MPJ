name: Compare Julia and Python Results

on:
  workflow_dispatch:

jobs:
  compare:
    runs-on: ubuntu-latest

    steps:
    # 1. Check out the repository
    - uses: actions/checkout@v3
    
    # 2. Set up Julia
    - name: Set up Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: '1.10.5'  # Specify the Julia version
        
    # 3. Install TimerOutputs package
    - name: Install TimerOutputs package
      run: julia -e 'import Pkg; Pkg.add("TimerOutputs")'

    # 4. Run Julia code
    - name: Run Julia script
      run: |
        julia -e 'println(sqrt(2))' > julia_result.txt  # Save Julia result to a file
        julia test_julia.jl 

    # 5. Add, commit, and push the file to the repository root
    - name: Commit and push test_julia.data and test_julia.times
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add test_julia.data
        git add test_julia.times
        git commit -m "Add test_julia.data and times to the root directory"
        git push origin HEAD:${{ github.ref }}  # Pousse les modifications sur la même branche    

    # 6. Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8.17'  # Specify the Python version

    # 7. Set up Python dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Installer les dépendances
        
    # 8. Run Python code
    - name: Run Python script
      run: |
        python -c "import math; print(math.sqrt(2))" > python_result.txt  # Save Python result to a file
        python test_python.py
        

    # 9. Add, commit, and push the file to the repository root
    - name: Commit and push test_python.data and test_python.times
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add test_python.data
        git add test_python.times
        git commit -m "Add test_python.data and times to the root directory"
        git push origin HEAD:${{ github.ref }}  # Pousse les modifications sur la même branche

   
    # 10. Compare the results
    - name: Compare Results
      run: |
        python_result=$(cat python_result.txt)
        julia_result=$(cat julia_result.txt)

        echo "Python result: $python_result"
        echo "Julia result: $julia_result"

        if [[ "$python_result" == "$julia_result" ]]; then
          echo "Results match."
        else
          echo "Results do not match!" && exit 1
        fi


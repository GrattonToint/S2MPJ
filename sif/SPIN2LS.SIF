***************************
* SET UP THE INITIAL DATA *
***************************

NAME          SPIN2LS

*   Problem :
*   *********

*   Given n particles z_j = x_j + i * y_j in the complex plane,
*   determine their positions so that the equations

*     z'_j = lambda z_j,

*   where z_j = sum_k \j i / conj( z_j - z_k ) and i = sqrt(-1)
*   for some lamda = mu + i * omega

*   A problem posed by Nick Trefethen; this is a condensed version of SPIN

*   SIF input: Nick Gould, June 2009
*   Least-squares version of SPIN2.SIF, Nick Gould, Jan 2020.

*   classification SUR2-AN-V-0

*   Number of particles n

*IE N                   2              $-PARAMETER matrix dimension
*IE N                   3              $-PARAMETER matrix dimension
*IE N                   5              $-PARAMETER matrix dimension
*IE N                   10             $-PARAMETER matrix dimension
*IE N                   15             $-PARAMETER matrix dimension
*IE N                   20             $-PARAMETER matrix dimension
*IE N                   25             $-PARAMETER matrix dimension
*IE N                   30             $-PARAMETER matrix dimension
*IE N                   35             $-PARAMETER matrix dimension
*IE N                   40             $-PARAMETER matrix dimension
*IE N                   45             $-PARAMETER matrix dimension
*IE N                   50             $-PARAMETER matrix dimension
 IE N                   5              $-PARAMETER     modified for S2X tests

*   other parameter definitions

 IE 1                   1
 IE 2                   2
 RI RN        N

* approximation of pi

 RF PI/4      ARCTAN    1.0
 RM 2PI       PI/4      8.0
 R/ 2PI/N     2PI                      RN

VARIABLES

 X  MU
 X  OMEGA

 DO I         1                        N
 X  X(I)
 X  Y(I)
 ND

GROUPS

*  constraints r_j = - mu * x_j + omega * y_j +
*    sum_k\j (y_j - y_k ) / [ (x_j - x_k)^2 + (y_j - y_k)^2 ] = 0

 DO I         1                        N
 XN R(I)
 ND

*  constraints i_j = - mu * y_j - omega * x_j -
*    sum_k\j (x_j - x_k ) / [ (x_j - x_k)^2 + (y_j - y_k)^2 ] = 0

 DO I         1                        N
 XN I(I)
 ND

BOUNDS

 FR SPIN2     'DEFAULT'

START POINT

*   default value for starting point component

 V  SPIN2     'DEFAULT'   1.0
 DO I         1                        N
 RI RI        I
 R* 2PII/N    2PI/N                    RI
 R( C         COS                      2PII/N
 R( S         SIN                      2PII/N
 ZV SPIN2     X(I)                     C
 ZV SPIN2     Y(I)                     S
 ND

ELEMENT TYPE

 EV 2PR       X                        Y
 EV RATIO     X1                       X2
 EV RATIO     Y1                       Y2
 IV RATIO     U                        V

ELEMENT USES

*  elements mx_j = mu * x_j

 DO I         1                        N
 XT MX(I)     2PR
 ZV MX(I)     X                        X(I)
 ZV MX(I)     Y                        MU

*  elements my_j = mu * y_j

 XT MY(I)     2PR
 ZV MY(I)     X                        Y(I)
 ZV MY(I)     Y                        MU

*  elements ox_j = omega * x_j

 XT OX(I)     2PR
 ZV OX(I)     X                        X(I)
 ZV OX(I)     Y                        OMEGA

*  elements oy_j = omega * y_j

 XT OY(I)     2PR
 ZV OY(I)     X                        Y(I)
 ZV OY(I)     Y                        OMEGA
 ND

*  elements rx_ij =  (x_i - x_j ) / [ (x_i - x_j)^2 + (y_i - y_j)^2 ]

 DO I         2                        N
 IA I-1       I          -1
 DO J         1                        I-1
 XT RX(I,J)   RATIO
 ZV RX(I,J)   X1                       X(I)
 ZV RX(I,J)   X2                       X(J)
 ZV RX(I,J)   Y1                       Y(I)
 ZV RX(I,J)   Y2                       Y(J)

*  elements ry_ij =  (y_i - y_j ) / [ (x_i - x_j)^2 + (y_i - y_j)^2 ]

 XT RY(I,J)   RATIO
 ZV RY(I,J)   X1                       Y(I)
 ZV RY(I,J)   X2                       Y(J)
 ZV RY(I,J)   Y1                       X(I)
 ZV RY(I,J)   Y2                       X(J)
 ND

GROUP TYPE

 GV L2        GVAR

GROUP USES

 XT 'DEFAULT' L2

*  constraints r_j = - mu * x_j + omega * y_j +
*    sum_k\j (y_j - y_k ) / ( (x_i - x_j)^2 + (y_i - y_j)^2 ) = 0

 DO I         1                        N
 IA I-1       I          -1
 IA I+1       I          1
 XE R(I)      MX(I)      -1.0
 XE R(I)      OY(I)      1.0
 DO J         1                        I-1
 XE R(I)      RY(I,J)    1.0
 OD J
 DO J         I+1                      N
 XE R(I)      RY(J,I)    -1.0
 OD J

*  constraints i_j = - mu * y_j - omega * x_j -
*    sum_k\j (x_j - x_k ) / ( (x_i - x_j)^2 + (y_i - y_j)^2 ) = 0

 XE I(I)      MY(I)      -1.0
 XE I(I)      OX(I)      -1.0
 DO J         1                        I-1
 XE I(I)      RX(I,J)    -1.0
 OD J
 DO J         I+1                      N
 XE I(I)      RX(J,I)    1.0
 OD J
 OD I

ENDATA

***********************
* SET UP THE FUNCTION *
* AND RANGE ROUTINES  *
***********************

ELEMENTS      SPIN2LS

TEMPORARIES

 R  S

INDIVIDUALS

*   product of two variables x and y

 T  2PR
 F                      X * Y
 G  X                   Y
 G  Y                   X
 H  X         Y         1.0

*   ratio of u = x1 - x2 and the sum of squares of square of u and v = y1 - y2

 T  RATIO
 R  U         X1        1.0            X2        -1.0
 R  V         Y1        1.0            Y2        -1.0
 A  S                   ( U ** 2 + V ** 2 )
 F                      U / S
 G  U                   1.0 / S - 2.0 * ( U / S ) ** 2
 G  V                   - 2.0 * U * V / S ** 2
 H  U         U         - 6.0 * U  / S ** 2 + 8 * ( U / S ) ** 3
 H  U         V         - 2.0 * V / S ** 2
 H+                      + 8.0 * ( V * U ** 2 ) / S ** 3
 H  V         V         - 2.0 * U / S ** 2
 H+                      + 8.0 * ( U * V ** 2 ) / S ** 3

ENDATA

*********************
* SET UP THE GROUPS *
* ROUTINE           *
*********************

GROUPS        SPIN2LS

INDIVIDUALS

 T  L2
 F                      GVAR * GVAR
 G                      GVAR + GVAR
 H                      2.0

ENDATA
